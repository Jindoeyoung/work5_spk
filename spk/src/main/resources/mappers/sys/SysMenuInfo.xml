<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spk.api.mapper.SysMenuInfoMapper">

	<!-- 시스템메뉴 리스트 조회  -->
    <select id="getSysMenuInfoList" resultType="com.spk.api.entity.SysMenuInfo">
        SELECT * FROM SYS_MENU_INFO 
        WHERE SPIKE_ID = #{SYS_MENU_INFO.spike_id}
          AND MENU_ID = #{SYS_MENU_INFO.menu_id}
          AND DIVISION = #{SYS_MENU_INFO.division}
         ORDER BY SEQ DESC
    </select>

	<!-- 시스템메뉴 정보 조회  -->
    <select id="getSysMenuInfo" resultType="com.spk.api.entity.SysMenuInfo">
        SELECT * FROM SYS_MENU_INFO 
        WHERE SPIKE_ID = #{SYS_MENU_INFO.spike_id}
          AND MENU_ID = #{SYS_MENU_INFO.menu_id}
          AND DIVISION = #{SYS_MENU_INFO.division}
          AND SEQ = (SELECT MAX(SEQ) 
                       FROM SYS_MENU_INFO
        			  WHERE SPIKE_ID = #{SYS_MENU_INFO.spike_id}
          				AND MENU_ID = #{SYS_MENU_INFO.menu_id}
          				AND DIVISION = #{SYS_MENU_INFO.division})                       
    </select>

	<!-- 시스템메뉴 등록  -->
    <insert id="insertSysMenuInfo" parameterType="com.spk.api.entity.SysMenuInfo">
        INSERT INTO SYS_MENU_INFO 
               (spike_id, 
                menu_id,
                division,
                seq,
                reg_dt,
                reg_id,
                commenter,
                use_yn,
                request
                ) 
        VALUES (
                #{SYS_MENU_INFO.spike_id},
                #{SYS_MENU_INFO.menu_id},
                #{SYS_MENU_INFO.division},
                (SELECT ifnull(MAX_SEQ, 1) 
                   FROM 
                      (
	                  SELECT MAX(seq)+1 AS MAX_SEQ 
	                   FROM SYS_MENU_INFO 
	                  WHERE SPIKE_ID = #{SYS_MENU_INFO.spike_id} 
	                  AND MENU_ID = #{SYS_MENU_INFO.menu_id}
	                  AND DIVISION = #{SYS_MENU_INFO.division}
	                  ) A
                  ),
                sysdate(),
                #{SYS_MENU_INFO.spike_id},
                #{SYS_MENU_INFO.commenter},
                #{SYS_MENU_INFO.use_yn},
                #{SYS_MENU_INFO.request}
                ) 
    </insert>
    
	<!-- 메뉴ID USE_YN 수정  -->
    <update id="updateUseYn" parameterType="com.spk.api.entity.SysMenuInfo">
		UPDATE SYS_MENU_USR SET USE_YN = #{SYS_MENU_INFO.use_yn}, UPT_DT = sysdate(), UPT_ID = #{SYS_MENU_INFO.spike_id}
		WHERE SPIKE_ID = #{SYS_MENU_INFO.spike_id}
		  AND DIVISION = #{SYS_MENU_INFO.division}		
		  AND MENU_ID = #{SYS_MENU_INFO.menu_id}
    </update>    
    
	<!-- 특정 상위메뉴코드를 함께 갖는, 동일 Level 메뉴들의 USE_YN 값들 조회  -->
    <select id="getSameLevelUseYn" resultType="com.spk.api.entity.SysMenuInfo">
		SELECT DISTINCT M.USE_YN FROM SYS_MENU_USR M
		WHERE EXISTS 
		(
			SELECT 1 FROM SYS_MENU_MST A 
               INNER JOIN SYS_MENU_USR B ON A.DIVISION = B.DIVISION AND A.MENU_ID = B.MENU_ID #AND A.SEQ = B.SEQ
			 WHERE M.SPIKE_ID = B.SPIKE_ID
			    AND M.DIVISION = B.DIVISION
				AND M.MENU_ID = B.MENU_ID
				AND M.SPIKE_ID = #{SYS_MENU_INFO.spike_id}
				AND M.DIVISION = #{SYS_MENU_INFO.division}
				AND A.PARENT_MENU_ID = (SELECT X.PARENT_MENU_ID
										  FROM SYS_MENU_MST X
									     WHERE X.DIVISION = #{SYS_MENU_INFO.division}
								           AND X.MENU_ID = #{SYS_MENU_INFO.menu_id})
		)		
    </select>
    
	<!-- 특정 상위메뉴코드의 USE_YN 값들 조회  -->
    <select id="getParentUseYn" resultType="com.spk.api.entity.SysMenuInfo">
		SELECT A.USE_YN FROM SYS_MENU_USR A
		 WHERE A.SPIKE_ID = #{SYS_MENU_INFO.spike_id}
		   AND A.DIVISION = #{SYS_MENU_INFO.division}
		   AND A.MENU_ID = (SELECT B.PARENT_MENU_ID
					    	  FROM SYS_MENU_MST B
							 WHERE B.DIVISION = #{SYS_MENU_INFO.division}
							   AND B.MENU_ID = #{SYS_MENU_INFO.menu_id})
    </select>        
    
	<!-- 상위메뉴ID USE_YN 수정  -->
    <update id="updateParentUseYn" parameterType="com.spk.api.entity.SysMenuInfo">
		UPDATE SYS_MENU_USR SET USE_YN = #{use_yn}, UPT_DT = sysdate(), UPT_ID = #{SYS_MENU_INFO.spike_id}
		WHERE MENU_ID = (SELECT A.PARENT_MENU_ID
						    FROM SYS_MENU_MST A
						   WHERE A.DIVISION = #{SYS_MENU_INFO.division}
							 AND A.MENU_ID = #{SYS_MENU_INFO.menu_id})
    </update>    
    
</mapper>